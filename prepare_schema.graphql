type Person @auth(
    # no query rule, query is available for all
    # add: { rule: "{$isAuthenticated: { eq: \"true\" } }" }
    # update: { rule: "{$isAuthenticated: { eq: \"true\" } }" }
    # delete: { rule: "{$isAuthenticated: { eq: \"true\" } }" }
) {
    personID: String! @id
    name: String @search(by: [term])
    nickNames: [String]
    gender: String
    # just year for now
    dateOfBirth: Int 
    # just year for now
    dateOfDeath: Int
    # should be Geo/geo/Point/Point[]
    location: [Int]
    children: [Person] @hasInverse(field: parents)
    parents: [Person]
    nonBioChildren: [Person] @hasInverse(field: nonBioParents)
    nonBioParents: [Person]
    physicalRelation: [Person] @hasInverse(field: physicalRelation)
    otherRelation: [Person] @hasInverse(field: otherRelation)
    story: Story
    cx: Float
    cy: Float
}

type Story {
    storyID: String! @id
    title: String @search(by: [term])
    persons: [Person] @hasInverse(field: story)
}
