curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"zed\"   , name: \"Zed Eszu\"      , gender: \"male\"         , children: [{ personID: \"zedjr\" }]                }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"kreeg\"   , name: \"Kreeg Eszu\"      , gender: \"male\"      , dateOfDeath: 2007   , children: [{ personID: \"zed\" }]                }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"maia\"   , name: \"Maia d'\''ApliÃ©se\"      , gender: \"female\"         , children: [{ personID: \"zedjr\" }]            , physicalRelation: [{ personID: \"zed\" }]    }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"alcyone\"   , name: \"Alcyone d'\''ApliÃ©se\"   , nickNames: [\"Ally\", \"Storm\"]   , gender: \"female\"   , dateOfBirth: 1980                      }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"thomfhalvorsen\"   , name: \"Thom Felix Halvorsen\"      , gender: \"male\"   , dateOfBirth: 1980                      }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"felixmhalvorsen\"   , name: \"Felix Mendelssohn Halvorsen\"      , gender: \"male\"         , children: [{ personID: \"alcyone\" }, { personID: \"thomfhalvorsen\" }]                }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"electra\"   , name: \"Electra d'\''ApliÃ©se\"   , nickNames: [\"Sun\"]   , gender: \"female\"                     , physicalRelation: [{ personID: \"zed\" }]    }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"marina\"   , name: \"Marina\"   , nickNames: [\"Ma\"]   , gender: \"female\"                         }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


curl 'http://localhost:8080/graphql' -H 'Content-Type: application/json' --compressed --data-binary '{"query":"mutation { addPerson(input: [   { personID:\"pasalt\"   , name: \"Pa Salt\"      , gender: \"male\"      , dateOfDeath: 2007      , nonBioChildren: [{ personID: \"maia\" }, { personID: \"alcyone\" }, { personID: \"electra\" }]            , otherRelation: [{ personID: \"marina\" }] }]) {   person {   personID   name   nickNames   gender   dateOfBirth   dateOfDeath   children {     personID   }   nonBioChildren {     personID   }   parents {     personID   }   nonBioParents {     personID   }   physicalRelation {     personID   }   otherRelation {     personID   }   } } }","variables":null}'


echo ;echo ðŸŽ‰ Finished curl scripts with graphql mutate statements